<h1>{{title}}</h1>
<p class="date">{{date}}</p>
<p><em><a href="https://medium.com/@jeremywagner/bulk-image-optimization-in-bash-e1dd03ebc477" rel="noopener">This article is also on Medium</a>!</em></p>
<p>There's <a href="http://www.gocomics.com/calvinandhobbes/2014/08/27" rel="noopener">one particular Calvin &amp; Hobbes comic</a> that I think about a lot when I think about web performance at a macro level. The first two panels on their own mirror many discussions I have with my colleagues on the topic. We bemoan our inability to simplify, simplify.</p>
<p>Rather than actually simplify the sites in our charge, what do we do? Evidently, many self-contradictory things. We (often wrongly) assume our sites have no appeal to anyone except for the audiences we (often wrongly) assume are reading it so we can justify our excesses. We adopt a <a href="https://facebook.github.io/react/" rel="noopener">huge framework</a> capable of rendering massive, ever-changing DOMs in the blink of an eye, yet are potentially onerous to load and parse before they provide any benefit. <a href="https://www.ampproject.org" rel="noopener">We even create an entirely separate site that delivers our content more expediently for us</a> instead of fixing performance problems on the site we want our users to actually visit. We build sites on top of mammoth content management systems for content authors that rarely log in to update content when a static site would have been a better fit.</p>
<p>We're expecting that someone else will save us from ourselves.</p>
<p>I usually take exception to being told that something inherently complex is easy, but the web is as difficult as we make it. And we're making it pretty difficult for ourselves. The browser comes factory installed with all the bells and whistles you need to build nimble, yet beautiful solutions to problems.</p>
